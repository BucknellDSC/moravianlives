Modified Scripto Plugin

This Scripto plugin is a modified version of the Scripto for WordPress plugin available on Github here https://github.com/chnm/scripto-wordpress-plugin.

It contains the following modifications to make the plugin suitable for our Moravian Lives Project.

1. Image ids/urls are encoded in UTF-8 (Unicode) instead of base64. The original encoding scheme was causing identification problems when the files were renamed in MediaWiki. For our purposes, the image ids need to match exactly in the MediaWiki database and the WordPress database. These modifications were made in "Document.php" and the changed code is commented.

2. Scripto now uses the permalinks "guid" field in the WordPress database for urls to the title page instead of dynamically generating urls. This is necessary because our images must be stored on an external server so the full path or each url will be different. Our files are stored on an external server so there is nothing in the WordPress attachments folder or any associated attachment file metadata information in the WordPress database. These changes were made to the file "class-scripto-plugin.php" and commented in the code.

3. Large attachment thumbnails are scaled down versions of the original image using css scaling. This is instead of the original Scripto code, which relies on lower resolution smaller files stored in the WordPress images folder. When an image is uploaded to WordPress, several smaller scale image versions are automatically generated. Small attachment thumbnails are drawn from a single stored image in the WordPress database. These modifications were made in the "class-scripto-plugin.php" file and are commented in the code.

4. Next/Previous buttons were added onto each transcription image page. This is accomplished by using a plus or minus 1 number function and comparing the result to id numbers stored in a separate text file. If it finds a matching id, the function adds an appropriate next/previous button with the new link. If not, it does nothing and no link is added. Previously, no support for next/previous image button existed in the Scripto for WordPress plugin. This exists in the Omeka version of the plugin but that only works with the Omeka database. Note that this navigation structure works only because our image ids are sequential and ordered. The image id numbers also match the catalog number in the Moravian archival catalog record. In addition to the link structure, the sequential and regular naming structure also allows us to easily identify each transcribed page for export from the MediaWiki database. Normally, when files are uploaded to WordPress, WordPress assigns a random id in the database.

5. Although this is not a modification of the Scripto plugin and involves only WordPress, it is worth mentioning here because without it, Scripto will not work. The Panzoom plugin available here https://github.com/timmywil/jquery.panzoom is used instead of Zend framework for image zooming. Currently, Zend framework is not supported in newer versions of WordPress. Additionally, the Panzoom plugin has the advantage that it uses css scaling instead of piecing together multiple smaller tiled images, as is the case with Zend. Zend Framework could never work for our project anyway because we rely on a single image stored on an external server. In order to use the Panzoom plugin or any plugin other than Zend, you need to add the Zend folder/requirement to gitignore on your server. Otherwise, you will get an error. Alternatively, one could also change the Scripto/WordPress code to not require Zend. For us, Zend is accomplished using the custom Moravian Lives API available here https://github.com/CDH-DevTeam/moravian-api.

6. The argument array to get the posts attachments and order them sequentially was changed to use the 'ID' in wp_posts instead of 'menu_order'. 'menu_order' is outdated and no longer used in WordPress. This was causing problems with parent entries that had large numbers of images. Specifically, order was interpreted incorrectly when more than 255 transcription images were present. This is likely the result of higher numbers in the menu_order field of the WordPress database being interpreted as unsigned 8-bit integers. I'm not sure exactly why the values were being passed as unsigned 8-bit integers but this seems to have fixed the problem for us. It could be unique to our custom website/database or a broader problem with how 'menu_order' works in WordPress. This change was made starting on line 403 or the file class-scripto.php. 